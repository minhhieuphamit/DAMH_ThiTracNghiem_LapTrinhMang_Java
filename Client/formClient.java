/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.URL;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Pham Minh Hieu
 */
public class formClient extends javax.swing.JFrame {

    /**
     * Creates new form formClient
     */
    String diaChi, port;

    public formClient() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("THI TRẮC NGHIỆM");
        URL urlIcon = formClient.class.getResource("icon.png");
        Image img = Toolkit.getDefaultToolkit().createImage(urlIcon);
        this.setIconImage(img);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextDiaChi = new javax.swing.JTextField();
        jTextPort = new javax.swing.JTextField();
        jButtonThoat = new javax.swing.JButton();
        jButtonDangNhap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 300));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN TO SERVER");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("TÊN ĐỊA CHỈ");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CỔNG PORT");

        jTextPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPortKeyPressed(evt);
            }
        });

        jButtonThoat.setText("THOÁT");
        jButtonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThoatActionPerformed(evt);
            }
        });

        jButtonDangNhap.setText("ĐĂNG NHẬP");
        jButtonDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDangNhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPort, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextPort, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonThoat)
                    .addComponent(jButtonDangNhap))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDangNhapActionPerformed
        // TODO add your handling code here:
        boolean check = false;
        diaChi = jTextDiaChi.getText();
        port = jTextPort.getText();
        if (diaChi.equals("") && port.equals("")) {
            JOptionPane.showMessageDialog(this, "ĐỊA CHỈ VÀ CỔNG PORT KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
            jTextDiaChi.requestFocus();
            return;
        } else if (diaChi.equals("")) {
            JOptionPane.showMessageDialog(this, "ĐỊA CHỈ KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
            jTextDiaChi.requestFocus();
            return;
        } else if (port.equals("")) {
            JOptionPane.showMessageDialog(this, "CỔNG PORT KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
            jTextPort.requestFocus();
            return;
        }
        try {
            while (!check) {
                if (!"localhost".equals(diaChi) && "1433".equals(port)) {
                    JOptionPane.showMessageDialog(null, "ĐỊA CHỈ SAI! VUI LÒNG NHẬP LẠI!!");
                    jTextDiaChi.requestFocus();
                    return;
                } else if ("localhost".equals(diaChi) && !"1433".equals(port)) {
                    JOptionPane.showMessageDialog(null, "PORT SAI! VUI LÒNG NHẬP LẠI!!");
                    jTextPort.requestFocus();
                    return;
                } else if (!"localhost".equals(diaChi) && !"1433".equals(port)) {
                    JOptionPane.showMessageDialog(null, "ĐỊA CHỈ & PORT SAI! VUI LÒNG NHẬP LẠI!!");
                    jTextDiaChi.requestFocus();
                    return;
                } else {
                    Socket socket = new Socket("localhost", 8888);
                    JOptionPane.showMessageDialog(null, "THÀNH CÔNG KẾT NỐI VỚI SERVER!");
                    DataInputStream dis = new DataInputStream(socket.getInputStream());
                    DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
                    String str = "";
                    str += diaChi;
                    str += "///";
                    str += port;
                    str += "///";
                    dos.writeUTF(str);
                    socket.close();
                    formClient login = new formClient();
                    this.setVisible(false);
                    formLoginDB DN = new formLoginDB();
                    DN.setVisible(true);
                    check = true;
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "KẾT NỐI THẤT BẠI!");
            jTextDiaChi.requestFocus();
        }
    }//GEN-LAST:event_jButtonDangNhapActionPerformed

    private void jButtonThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThoatActionPerformed
        // TODO add your handling code here:
        JFrame Frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(Frame, "Bạn có chắc chắn muốn thoát!", "Thoát!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_jButtonThoatActionPerformed

    private void jTextPortKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPortKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            boolean check = false;
            diaChi = jTextDiaChi.getText();
            port = jTextPort.getText();
            if (diaChi.equals("") && port.equals("")) {
                JOptionPane.showMessageDialog(this, "ĐỊA CHỈ VÀ CỔNG PORT KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
                jTextDiaChi.requestFocus();
                return;
            } else if (diaChi.equals("")) {
                JOptionPane.showMessageDialog(this, "ĐỊA CHỈ KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
                jTextDiaChi.requestFocus();
                return;
            } else if (port.equals("")) {
                JOptionPane.showMessageDialog(this, "CỔNG PORT KHÔNG ĐƯỢC ĐỂ TRỐNG. VUI LÒNG NHẬP LẠI!!");
                jTextPort.requestFocus();
                return;
            }
            try {
                while (!check) {
                    if (!"localhost".equals(diaChi) && "1433".equals(port)) {
                        JOptionPane.showMessageDialog(null, "ĐỊA CHỈ SAI! VUI LÒNG NHẬP LẠI!!");
                        jTextDiaChi.requestFocus();
                        return;
                    } else if ("localhost".equals(diaChi) && !"1433".equals(port)) {
                        JOptionPane.showMessageDialog(null, "PORT SAI! VUI LÒNG NHẬP LẠI!!");
                        jTextPort.requestFocus();
                        return;
                    } else if (!"localhost".equals(diaChi) && !"1433".equals(port)) {
                        JOptionPane.showMessageDialog(null, "ĐỊA CHỈ & PORT SAI! VUI LÒNG NHẬP LẠI!!");
                        jTextDiaChi.requestFocus();
                        return;
                    } else {
                        Socket socket = new Socket("localhost", 8888);
                        JOptionPane.showMessageDialog(null, "THÀNH CÔNG KẾT NỐI VỚI SERVER!");
                        DataInputStream dis = new DataInputStream(socket.getInputStream());
                        DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
                        String str = "";
                        str += diaChi;
                        str += "///";
                        str += port;
                        str += "///";
                        dos.writeUTF(str);
                        formClient login = new formClient();
                        this.setVisible(false);
                        formLoginDB DN = new formLoginDB();
                        DN.setVisible(true);
                        check = true;
                    }

                }

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, " THẤT BẠI!");
                jTextDiaChi.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextPortKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDangNhap;
    private javax.swing.JButton jButtonThoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextDiaChi;
    private javax.swing.JTextField jTextPort;
    // End of variables declaration//GEN-END:variables
}
